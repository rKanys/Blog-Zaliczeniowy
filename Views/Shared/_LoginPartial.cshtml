@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		var currentUser = await UserManager.GetUserAsync(User);
		<li class="nav-item">
			@if (currentUser != null)
			{
				var roles = await UserManager.GetRolesAsync(currentUser);
				if (roles.Contains("Administrator"))
				{
					<span>Rola: @string.Join(", ", roles)</span>
				}
			}


		</li>
		<li class="nav-item">
			@if (currentUser != null)
			{
				<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Cześć @currentUser.Nickname!</a>
			}
		</li>
		<li class="nav-item">

			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "posts", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">Wyloguj się</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Zarejestruj się</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Zaloguj się</a>
		</li>
	}
</ul>
